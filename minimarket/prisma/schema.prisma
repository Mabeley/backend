// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario{
  id Int @id @unique @default(autoincrement())
  nombre String? // indica q el campo puede tener valores nulos
  email String @unique
  password String
  rol   USUARIO_ROL @default(CLIENTE)
  validado Boolean @default(false)
  pedidos Pedido[]
  //@@unique([nombre,email,password]) para q no se repitan
  @@map("usuarios") // ASI SE VA  ALLAMAR LA TABLA EN LA BASE DE DATOS,
  // SI NO SE COLOCA SE CREARA CON EL NOMBRE DEL MODELO
}


model Producto{
  id Int @id @unique @default(autoincrement())
  nombre String
  precio Float
  unidad_medida UM_PRODUCTO @map("unidad_medida")
  categoria CATEGORIA_PRODUCTO
  @@map("productos")

  detallePedido DetallePedido[]
}
//https://www.prisma.io/docs/concepts/components/prisma-schema/relations
model Pedido{
  id Int @id @unique @default(autoincrement())
  fecha DateTime @db.Date //solo nos dara la fecha
  //https://www.prisma.io/docs/concepts/components/prisma-schema/data-model#native-types-mapping
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#model-field-scalar-types
  total Float
  estado PEDIDO_ESTADO
  processId String? @map("process_id")
  clienteId Int
  cliente Usuario @relation(fields:[clienteId],references: [id])

  detallePedido DetallePedido[]
  @@map("pedidos")
}

model DetallePedido{
  id Int @id @unique @default(autoincrement())
  cantidad Float 
  subTotal Float @map("sub_total")
  unidadMedida UM_PRODUCTO
  productoId Int @map("producto_id")
  pedidoId Int @map("pedido_id")

  producto Producto @relation(fields:[productoId], references:[id])

  pedido Pedido @relation(fields:[pedidoId], references: [id])

  @@map("detallePedido")
}
enum USUARIO_ROL {
  ADMINISTRADOR
  CLIENTE
}
enum UM_PRODUCTO {
  KG
  UNIDAD
}
enum CATEGORIA_PRODUCTO {
  VERDURAS
  FRUTA
  ELECTRODOMESTICO
  LIMPIEZA
  OTROS
}
enum PEDIDO_ESTADO {
  CREADO
  ACEPTADO
  PAGADO
  ERROR
}